; PlatformIO Project Configuration File for EMS-ESP

[platformio]
default_envs = esp32

# override any settings with your own local ones in pio_local.ini
extra_configs = 
  factory_settings.ini
  pio_local.ini

[common]
; default platformio compile flags are: -fno-rtti -std=c++11 -Os -mlongcalls -mtext-section-literals -falign-functions=4 -ffunction-sections -fdata-sections -fno-exceptions -Wall
core_build_flags =    -Wno-deprecated-declarations
                      -Wreturn-type
                      -DCORE_DEBUG_LEVEL=0
                      -DNDEBUG

esp32_build_flags   = -DARDUINO_ARCH_ESP32=1
                      -DESP32=1
                      -DBOARD_HAS_PSRAM
                    ; -std=c17 -std=c++17 -std=gnu++17  

build_flags =
  ${common.core_build_flags}
  ${factory_settings.build_flags}
  -D FT_PROJECT=1
  -D FT_SECURITY=1
  -D FT_MQTT=1
  -D FT_OTA=1
  -D FT_NTP=1
  -D FT_UPLOAD_FIRMWARE=1
  -D ONEWIRE_CRC16=0
  -D NO_GLOBAL_ARDUINOOTA
  -D ARDUINOJSON_ENABLE_STD_STRING=1
  -D CORS_ORIGIN=\"http://localhost:3000\"
  
build_unflags = -Wall
                -Wdeprecated-declarations

esp32_build_unflags = 
     ; -std=gnu++11

debug_flags =
  ; -D EMSESP_DEBUG
  ; -D EMSESP_UART_DEBUG
  ; -D EMSESP_TEST
  ; -D ENABLE_CORS

[env]
framework = arduino
monitor_speed = 115200
upload_speed = 921600
build_type = release
lib_ldf_mode = chain+
; lib_compat_mode = strict

check_tool = cppcheck, clangtidy
check_severity = high, medium
check_flags =
    cppcheck: --std=c++11 -v
    clangtidy: --checks=-*,clang-analyzer-*,performance-*

; build for GitHub Actions CI
[env:esp32-ci]
extra_scripts = 
  scripts/rename_fw.py
board = esp32dev
platform = espressif32
board_build.partitions = esp32_partition_app1984k_spiffs64k.csv 
build_flags = ${common.build_flags} ${common.esp32_build_flags}
build_unflags = ${common.build_unflags} ${common.esp32_build_unflags}

[env:esp32]
extra_scripts =
  pre:scripts/build_interface.py
  scripts/rename_fw.py
board = esp32dev
platform = espressif32
;platform_packages =  framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#idf-release/v4.2
;                     ;  toolchain-xtensa32 @ 2.80200.200226
;                     ;  toolchain-xtensa32 @ 5.100200.201223
;                      toolchain-xtensa32 @ 2.80400.2020 ;  c70ec8a-toolchain-xtensa32-linux_x86_64-2.80400.2020.tar.gz
; platform = https://github.com/platformio/platform-espressif32.git
board_build.partitions = esp32_partition_app1984k_spiffs64k.csv ; https://github.com/espressif/arduino-esp32/blob/master/tools/partitions/
build_flags = ${common.build_flags} ${common.esp32_build_flags} ${common.debug_flags}
build_unflags = ${common.build_unflags} ${common.esp32_build_unflags}
