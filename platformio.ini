;
; PlatformIO Project Configuration File for EMS-ESP
;

[platformio]
default_envs = release
; default_envs = debug

[common]
; custom build options are:
; -DMYESP_TIMESTAMP
; -DTESTS
; -DCRASH
; -DFORCE_SERIAL
; -DMYESP_DEBUG
; -DSENSOR_MQTT_USEID
; custom_flags = -DFORCE_SERIAL -DMYESP_DEBUG -DEMSESP_SIMULATE
custom_flags =

# Available lwIP variants (macros):
#    -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH  = v1.4 Higher Bandwidth (default)
#    -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY       = v2 Lower Memory
#    -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH = v2 Higher Bandwidth
#    -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
#    -DPIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_LOW_MEMORY
# Other flags
#    -DVTABLES_IN_FLASH
#    -DNO_GLOBAL_EEPROM
#    -DBEARSSL_SSL_BASIC 
# general_flags = -DNO_GLOBAL_EEPROM -DVTABLES_IN_FLASH -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
general_flags = -DNO_GLOBAL_EEPROM


# From https://github.com/esp8266/Arduino/blob/master/tools/sdk/ld
#  eagle.flash.4m1m.ld = 1019 KB sketch, 1000 KB SPIFFS. 4KB EEPROM, 4KB RFCAL, 12KB WIFI stack, 2052 KB OTA & buffer 
#  eagle.flash.4m2m.ld = same as above but with 2024 KB SPIFFS
#  eagle.flash.4m.ld   = same as above but with no SPIFFS storage
board_build.ldscript = eagle.flash.4m.ld
build_flags = ${common.general_flags} -std=c++11 -fno-exceptions

[env]
framework = arduino
platform = espressif8266
lib_compat_mode = strict
lib_deps =
  https://github.com/rlogiacco/CircularBuffer
  https://github.com/PaulStoffregen/OneWire
  https://github.com/me-no-dev/ESPAsyncWebServer
  https://github.com/me-no-dev/ESPAsyncUDP
  uuid-common@^1.1.0
  uuid-log@^2.1.1
  uuid-syslog@^2.0.4 ; https://github.com/nomis/mcu-uuid-syslog
  JustWifi@2.0.2 ; https://github.com/xoseperez/justwifi
  AsyncMqttClient@0.8.2 ; https://github.com/marvinroger/async-mqtt-client
  EEPROM_Rotate@0.9.2 ; https://github.com/xoseperez/eeprom_rotate
  https://github.com/bblanchon/ArduinoJson
  ESPAsyncTCP@1.2.2 ; https://github.com/me-no-dev/ESPAsyncTCP
upload_speed = 921600
monitor_speed = 115200

; example ports for OSX
;upload_port = /dev/cu.wchusbserial14403
;upload_port = /dev/cu.usbserial-1440

; comment out this section if using USB and not OTA for firmware uploads
upload_protocol = espota
upload_port = ems-esp.local

#
# These following targets are used by TravisCI to build the firmware versions on Release
# Do not modify
#
[env:travis]
board = esp12e
build_flags = ${common.build_flags}
extra_scripts = scripts/main_script.py

[env:esp12e]
board = esp12e
build_flags = ${common.build_flags}
extra_scripts = scripts/main_script.py

[env:d1_mini]
board = d1_mini
build_flags = ${common.build_flags}
extra_scripts = scripts/main_script.py

[env:nodemcuv2]
board = nodemcuv2
build_flags = ${common.build_flags}
extra_scripts = scripts/main_script.py

[env:nodemcu]
board = nodemcu
build_flags = ${common.build_flags}
extra_scripts = scripts/main_script.py

#
# These two targets below (release and debug) can be modified
#
[env:debug]
board = d1_mini
build_type = debug
build_flags = ${common.build_flags} ${common.custom_flags}
extra_scripts = 
  pre:scripts/pre_script.py
  scripts/main_script.py

[env:release]
board = d1_mini
build_type = release
build_flags = ${common.build_flags} ${common.custom_flags}
extra_scripts = 
  pre:scripts/pre_script.py
  scripts/main_script.py
  